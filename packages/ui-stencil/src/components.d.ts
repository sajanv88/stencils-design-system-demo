/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppButton {
        "size": 'sm' | 'lg';
    }
    interface AppInputTextField {
        "clear": () => Promise<void>;
        "getValue": () => Promise<string>;
        "isEmpty": () => Promise<boolean>;
        "placeholder"?: string;
        "setValue": (value: string) => Promise<void>;
    }
    interface AppList {
    }
    interface AppListItem {
    }
}
export interface AppButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLAppButtonElement;
}
export interface AppInputTextFieldCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLAppInputTextFieldElement;
}
declare global {
    interface HTMLAppButtonElement extends Components.AppButton, HTMLStencilElement {
    }
    var HTMLAppButtonElement: {
        prototype: HTMLAppButtonElement;
        new (): HTMLAppButtonElement;
    };
    interface HTMLAppInputTextFieldElement extends Components.AppInputTextField, HTMLStencilElement {
    }
    var HTMLAppInputTextFieldElement: {
        prototype: HTMLAppInputTextFieldElement;
        new (): HTMLAppInputTextFieldElement;
    };
    interface HTMLAppListElement extends Components.AppList, HTMLStencilElement {
    }
    var HTMLAppListElement: {
        prototype: HTMLAppListElement;
        new (): HTMLAppListElement;
    };
    interface HTMLAppListItemElement extends Components.AppListItem, HTMLStencilElement {
    }
    var HTMLAppListItemElement: {
        prototype: HTMLAppListItemElement;
        new (): HTMLAppListItemElement;
    };
    interface HTMLElementTagNameMap {
        "app-button": HTMLAppButtonElement;
        "app-input-text-field": HTMLAppInputTextFieldElement;
        "app-list": HTMLAppListElement;
        "app-list-item": HTMLAppListItemElement;
    }
}
declare namespace LocalJSX {
    interface AppButton {
        "onClickEvent"?: (event: AppButtonCustomEvent<{ ev: globalThis.Event }>) => void;
        "size"?: 'sm' | 'lg';
    }
    interface AppInputTextField {
        "onTextInputChangeEvent"?: (event: AppInputTextFieldCustomEvent<{ value: string; ev: globalThis.Event }>) => void;
        "placeholder"?: string;
    }
    interface AppList {
    }
    interface AppListItem {
    }
    interface IntrinsicElements {
        "app-button": AppButton;
        "app-input-text-field": AppInputTextField;
        "app-list": AppList;
        "app-list-item": AppListItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-button": LocalJSX.AppButton & JSXBase.HTMLAttributes<HTMLAppButtonElement>;
            "app-input-text-field": LocalJSX.AppInputTextField & JSXBase.HTMLAttributes<HTMLAppInputTextFieldElement>;
            "app-list": LocalJSX.AppList & JSXBase.HTMLAttributes<HTMLAppListElement>;
            "app-list-item": LocalJSX.AppListItem & JSXBase.HTMLAttributes<HTMLAppListItemElement>;
        }
    }
}
